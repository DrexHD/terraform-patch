plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id "me.modmuss50.mod-publish-plugin" version "0.8.4"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://api.modrinth.com/maven/" }
	maven { url 'https://maven.nucleoid.xyz' }
	maven { url 'https://maven.terraformersmc.com/' }
	maven {
		url "https://maven.theepicblock.nl"
		content { includeGroup("nl.theepicblock") }
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompileOnly("com.terraformersmc.terraform-api:terraform-biome-remapper-api-v1:${project.terraform_api_version}")
	modCompileOnly("com.terraformersmc.terraform-api:terraform-config-api-v1:${project.terraform_api_version}")
	modCompileOnly("com.terraformersmc.terraform-api:terraform-dirt-api-v1:${project.terraform_api_version}")
	modCompileOnly("com.terraformersmc.terraform-api:terraform-shapes-api-v1:${project.terraform_api_version}")
	modCompileOnly("com.terraformersmc.terraform-api:terraform-surfaces-api-v1:${project.terraform_api_version}")
	modCompileOnly("com.terraformersmc.terraform-api:terraform-tree-api-v1:${project.terraform_api_version}")
	modCompileOnly("com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_api_version}")
	modCompileOnly("com.terraformersmc:biolith-fabric:${project.biolith_version}")

	modCompileOnly("com.terraformersmc:terrestria-common:${project.terrestria_version}")
	modCompileOnly("com.terraformersmc:cinderscapes-common:${project.cinderscapes_version}")
	modCompileOnly("com.terraformersmc:traverse-common:${project.traverse_version}")
	modCompileOnly files("libs/WoodsAndMires-2.1.1+1.21.8.jar")
	modCompileOnly("maven.modrinth:blockus:${project.blockus_version}")


	modImplementation include("eu.pb4:factorytools:${project.factorytools_version}")
	modImplementation include("nl.theepicblock:resource-locator-api:${project.resource_locator_version}")

	modImplementation "eu.pb4:polymer-core:${project.polymer_version}"
	modImplementation("eu.pb4:polymer-blocks:${project.polymer_version}")
	modImplementation "eu.pb4:polymer-resource-pack:${project.polymer_version}"
	modImplementation("eu.pb4:polymer-sound-patcher:${project.polymer_version}")
	modImplementation "eu.pb4:polymer-resource-pack-extras:${project.polymer_version}"
	modImplementation("eu.pb4:polymer-autohost:${project.polymer_version}")
	modImplementation "eu.pb4:polymer-virtual-entity:${project.polymer_version}"
}

publishMods {
	file = remapJar.archiveFile
	type = STABLE
	changelog = providers.environmentVariable("CHANGELOG").getOrElse("No changelog provided")

	displayName = "terraform-patch ${version.get()}"

	github {
		accessToken = providers.environmentVariable("GITHUB_TOKEN")
		repository = providers.environmentVariable("GITHUB_REPOSITORY").getOrElse("DrexHD/terraform-patch")
		commitish = providers.environmentVariable("GITHUB_REF_NAME").getOrElse("main")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
